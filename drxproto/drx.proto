// Copyright 2015 gRPC authors.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

option go_package = "./"; //dir of create proto-file

package drxproto;
import "google/api/annotations.proto"; //in local directory

// The greeting service definition.
service Greeter {
  // Sends a greeting
  rpc SayHello (HelloRequest) returns (HelloReply) {}
  // Sends another greeting
  rpc SayHelloAgain (HelloRequest) returns (HelloReply) {}
  // Отправить Id, получить подтверждение
  rpc RouteId (RequestId) returns (ReplyId) {}
  // Отправить Status, получить подтверждение
  rpc RouteStatus (RequestStatus) returns (ReplyStatus) {}
}


// The request message containing the user's name.
message HelloRequest {
  string name = 1;
}

// The response message containing the greetings
message HelloReply {
  string message = 1;
}

// The request message containing Id.
message RequestId {
  string Id = 1;
}

// The response message containing Id
message ReplyId {
  string message = 1;
}

// The request message containing Status.
message RequestStatus {
  string Status = 1;
}

// The response message containing Status
message ReplyStatus {
  string message = 1;
}


service EchoService {
  rpc Echo(EchoMessage) returns (EchoMessage) {
    option (google.api.http) = {
      post: "/v1/echo"
      body: "*"
    };
  }
}

message EchoMessage {
 string value = 1;
}
